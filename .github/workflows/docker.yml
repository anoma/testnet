name: Build and Deploy Docker Images üßô‚Äç‚ôÇÔ∏è

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-[a-z]+"
    branches:
      - "v?[0-9]+.[0-9]+.[0-9]+-rc"
      - "v?[0-9]+.[0-9]+.[0-9]+-[a-z]+-rc"
      - "v?[0-9]+.[0-9]+.[0-9]+-maint"
      - "v?[0-9]+.[0-9]+.[0-9]+-[a-z]+-maint"
  pull_request:
    branches:
      - "main"
      - "master"

permissions:
  packages: write
  pages: write
  id-token: write
  contents: read

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    env:
      GIT_LFS_SKIP_SMUDGE: 1
      REGISTRY_URL: ghcr.io

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_URL }}/anoma/testnet
      - name: Build and Push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ env.REGISTRY_URL }}/anoma/testnet:${{ steps.get_version.outputs.version-without-v }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_COMMIT_SHA=${{ github.sha }}